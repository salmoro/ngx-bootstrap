{"version":3,"file":"ngx-bootstrap-focus-trap.mjs","sources":["../../../../src/focus-trap/focus-trap-manager.ts","../../../../src/focus-trap/platform.ts","../../../../src/focus-trap/interactivity-checker.ts","../../../../src/focus-trap/boolean-property.ts","../../../../src/focus-trap/focus-trap.ts","../../../../src/focus-trap/focus-trap.module.ts","../../../../src/focus-trap/ngx-bootstrap-focus-trap.ts"],"sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/* eslint-disable */\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n/**\r\n * A FocusTrap managed by FocusTrapManager.\r\n * Implemented by ConfigurableFocusTrap to avoid circular dependency.\r\n */\r\nexport interface ManagedFocusTrap {\r\n  _enable(): void;\r\n  _disable(): void;\r\n  focusInitialElementWhenReady(): Promise<boolean>;\r\n}\r\n\r\n/** Injectable that ensures only the most recently enabled FocusTrap is active. */\r\n@Injectable({providedIn: 'root'})\r\nexport class FocusTrapManager {\r\n  // A stack of the FocusTraps on the page. Only the FocusTrap at the\r\n  // top of the stack is active.\r\n  private _focusTrapStack: ManagedFocusTrap[] = [];\r\n\r\n  /**\r\n   * Disables the FocusTrap at the top of the stack, and then pushes\r\n   * the new FocusTrap onto the stack.\r\n   */\r\n  register(focusTrap: ManagedFocusTrap): void {\r\n    // Dedupe focusTraps that register multiple times.\r\n    this._focusTrapStack = this._focusTrapStack.filter((ft) => ft !== focusTrap);\r\n\r\n    let stack = this._focusTrapStack;\r\n\r\n    if (stack.length) {\r\n      stack[stack.length - 1]._disable();\r\n    }\r\n\r\n    stack.push(focusTrap);\r\n    focusTrap._enable();\r\n  }\r\n\r\n  /**\r\n   * Removes the FocusTrap from the stack, and activates the\r\n   * FocusTrap that is the new top of the stack.\r\n   */\r\n  deregister(focusTrap: ManagedFocusTrap): void {\r\n    focusTrap._disable();\r\n\r\n    const stack = this._focusTrapStack;\r\n\r\n    const i = stack.indexOf(focusTrap);\r\n    if (i !== -1) {\r\n      stack.splice(i, 1);\r\n      if (stack.length) {\r\n        stack[stack.length - 1]._enable();\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/* eslint-disable */\r\n\r\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\n// Whether the current platform supports the V8 Break Iterator. The V8 check\r\n// is necessary to detect all Blink based browsers.\r\nlet hasV8BreakIterator: boolean;\r\n\r\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\r\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\r\n// the consumer is providing a polyfilled `Map`. See:\r\n// https://github.com/Microsoft/ChakraCore/issues/3189\r\n// https://github.com/angular/components/issues/15687\r\ntry {\r\n  hasV8BreakIterator = (typeof Intl !== 'undefined' && (Intl as any).v8BreakIterator);\r\n} catch {\r\n  hasV8BreakIterator = false;\r\n}\r\n\r\n/**\r\n * Service to detect the current platform by comparing the userAgent strings and\r\n * checking browser-specific global properties.\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class Platform {\r\n  // We want to use the Angular platform check because if the Document is shimmed\r\n  // without the navigator, the following checks will fail. This is preferred because\r\n  // sometimes the Document may be shimmed without the user's knowledge or intention\r\n  /** Whether the Angular application is being rendered in the browser. */\r\n  isBrowser: boolean = this._platformId ?\r\n    isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\r\n\r\n  /** Whether the current browser is Microsoft Edge. */\r\n  EDGE: boolean = this.isBrowser && /(edge)/i.test(navigator.userAgent);\r\n\r\n  /** Whether the current rendering engine is Microsoft Trident. */\r\n  TRIDENT: boolean = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\r\n\r\n  // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\r\n  /** Whether the current rendering engine is Blink. */\r\n  BLINK: boolean = this.isBrowser && (!!((window as any).chrome || hasV8BreakIterator) &&\r\n    typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT);\r\n\r\n  // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\r\n  // ensure that Webkit runs standalone and is not used as another engine's base.\r\n  /** Whether the current rendering engine is WebKit. */\r\n  WEBKIT: boolean = this.isBrowser &&\r\n    /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\r\n\r\n  /** Whether the current platform is Apple iOS. */\r\n  IOS: boolean = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&\r\n    !('MSStream' in window);\r\n\r\n  // It's difficult to detect the plain Gecko engine, because most of the browsers identify\r\n  // them self as Gecko-like browsers and modify the userAgent's according to that.\r\n  // Since we only cover one explicit Firefox case, we can simply check for Firefox\r\n  // instead of having an unstable check for Gecko.\r\n  /** Whether the current browser is Firefox. */\r\n  FIREFOX: boolean = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\r\n\r\n  /** Whether the current platform is Android. */\r\n    // Trident on mobile adds the android platform to the userAgent to trick detections.\r\n  ANDROID: boolean = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\r\n\r\n  // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\r\n  // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\r\n  // Safari browser should also use Webkit as its layout engine.\r\n  /** Whether the current browser is Safari. */\r\n  SAFARI: boolean = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\r\n\r\n  constructor(@Inject(PLATFORM_ID) private _platformId: Object) {\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/* eslint-disable */\r\n\r\nimport { Platform } from './platform';\r\nimport { Injectable } from '@angular/core';\r\n\r\n/**\r\n * Configuration for the isFocusable method.\r\n */\r\nexport class IsFocusableConfig {\r\n  /**\r\n   * Whether to count an element as focusable even if it is not currently visible.\r\n   */\r\n  ignoreVisibility: boolean = false;\r\n}\r\n\r\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\r\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\r\n// supported.\r\n\r\n/**\r\n * Utility for checking the interactivity of an element, such as whether is is focusable or\r\n * tabbable.\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class InteractivityChecker {\r\n\r\n  constructor(private _platform: Platform) {\r\n  }\r\n\r\n  /**\r\n   * Gets whether an element is disabled.\r\n   *\r\n   * @param element Element to be checked.\r\n   * @returns Whether the element is disabled.\r\n   */\r\n  isDisabled(element: HTMLElement): boolean {\r\n    // This does not capture some cases, such as a non-form control with a disabled attribute or\r\n    // a form control inside of a disabled form, but should capture the most common cases.\r\n    return element.hasAttribute('disabled');\r\n  }\r\n\r\n  /**\r\n   * Gets whether an element is visible for the purposes of interactivity.\r\n   *\r\n   * This will capture states like `display: none` and `visibility: hidden`, but not things like\r\n   * being clipped by an `overflow: hidden` parent or being outside the viewport.\r\n   *\r\n   * @returns Whether the element is visible.\r\n   */\r\n  isVisible(element: HTMLElement): boolean {\r\n    return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\r\n  }\r\n\r\n  /**\r\n   * Gets whether an element can be reached via Tab key.\r\n   * Assumes that the element has already been checked with isFocusable.\r\n   *\r\n   * @param element Element to be checked.\r\n   * @returns Whether the element is tabbable.\r\n   */\r\n  isTabbable(element: HTMLElement): boolean {\r\n    // Nothing is tabbable on the server ðŸ˜Ž\r\n    if (!this._platform.isBrowser) {\r\n      return false;\r\n    }\r\n\r\n    const frameElement = getFrameElement(getWindow(element));\r\n\r\n    if (frameElement) {\r\n      // Frame elements inherit their tabindex onto all child elements.\r\n      if (getTabIndexValue(frameElement) === -1) {\r\n        return false;\r\n      }\r\n\r\n      // Browsers disable tabbing to an element inside of an invisible frame.\r\n      if (!this.isVisible(frameElement)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    let nodeName = element.nodeName.toLowerCase();\r\n    let tabIndexValue = getTabIndexValue(element);\r\n\r\n    if (element.hasAttribute('contenteditable')) {\r\n      return tabIndexValue !== -1;\r\n    }\r\n\r\n    if (nodeName === 'iframe' || nodeName === 'object') {\r\n      // The frame or object's content may be tabbable depending on the content, but it's\r\n      // not possibly to reliably detect the content of the frames. We always consider such\r\n      // elements as non-tabbable.\r\n      return false;\r\n    }\r\n\r\n    // In iOS, the browser only considers some specific elements as tabbable.\r\n    if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\r\n      return false;\r\n    }\r\n\r\n    if (nodeName === 'audio') {\r\n      // Audio elements without controls enabled are never tabbable, regardless\r\n      // of the tabindex attribute explicitly being set.\r\n      if (!element.hasAttribute('controls')) {\r\n        return false;\r\n      }\r\n      // Audio elements with controls are by default tabbable unless the\r\n      // tabindex attribute is set to `-1` explicitly.\r\n      return tabIndexValue !== -1;\r\n    }\r\n\r\n    if (nodeName === 'video') {\r\n      // For all video elements, if the tabindex attribute is set to `-1`, the video\r\n      // is not tabbable. Note: We cannot rely on the default `HTMLElement.tabIndex`\r\n      // property as that one is set to `-1` in Chrome, Edge and Safari v13.1. The\r\n      // tabindex attribute is the source of truth here.\r\n      if (tabIndexValue === -1) {\r\n        return false;\r\n      }\r\n      // If the tabindex is explicitly set, and not `-1` (as per check before), the\r\n      // video element is always tabbable (regardless of whether it has controls or not).\r\n      if (tabIndexValue !== null) {\r\n        return true;\r\n      }\r\n      // Otherwise (when no explicit tabindex is set), a video is only tabbable if it\r\n      // has controls enabled. Firefox is special as videos are always tabbable regardless\r\n      // of whether there are controls or not.\r\n      return this._platform.FIREFOX || element.hasAttribute('controls');\r\n    }\r\n\r\n    return element.tabIndex >= 0;\r\n  }\r\n\r\n  /**\r\n   * Gets whether an element can be focused by the user.\r\n   *\r\n   * @param element Element to be checked.\r\n   * @param config The config object with options to customize this method's behavior\r\n   * @returns Whether the element is focusable.\r\n   */\r\n  isFocusable(element: HTMLElement, config?: IsFocusableConfig): boolean {\r\n    // Perform checks in order of left to most expensive.\r\n    // Again, naive approach that does not capture many edge cases and browser quirks.\r\n    return isPotentiallyFocusable(element) && !this.isDisabled(element) &&\r\n      (config?.ignoreVisibility || this.isVisible(element));\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\r\n * the frameElement property is being accessed from a different host address, this property\r\n * should be accessed carefully.\r\n */\r\nfunction getFrameElement(window: Window) {\r\n  try {\r\n    return window.frameElement as HTMLElement;\r\n  } catch {\r\n    return null;\r\n  }\r\n}\r\n\r\n/** Checks whether the specified element has any geometry / rectangles. */\r\nfunction hasGeometry(element: HTMLElement): boolean {\r\n  // Use logic from jQuery to check for an invisible element.\r\n  // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\r\n  return !!(element.offsetWidth || element.offsetHeight ||\r\n    (typeof element.getClientRects === 'function' && element.getClientRects().length));\r\n}\r\n\r\n/** Gets whether an element's  */\r\nfunction isNativeFormElement(element: Node) {\r\n  let nodeName = element.nodeName.toLowerCase();\r\n  return nodeName === 'input' ||\r\n    nodeName === 'select' ||\r\n    nodeName === 'button' ||\r\n    nodeName === 'textarea';\r\n}\r\n\r\n/** Gets whether an element is an `<input type=\"hidden\">`. */\r\nfunction isHiddenInput(element: HTMLElement): boolean {\r\n  return isInputElement(element) && element.type == 'hidden';\r\n}\r\n\r\n/** Gets whether an element is an anchor that has an href attribute. */\r\nfunction isAnchorWithHref(element: HTMLElement): boolean {\r\n  return isAnchorElement(element) && element.hasAttribute('href');\r\n}\r\n\r\n/** Gets whether an element is an input element. */\r\nfunction isInputElement(element: HTMLElement): element is HTMLInputElement {\r\n  return element.nodeName.toLowerCase() == 'input';\r\n}\r\n\r\n/** Gets whether an element is an anchor element. */\r\nfunction isAnchorElement(element: HTMLElement): element is HTMLAnchorElement {\r\n  return element.nodeName.toLowerCase() == 'a';\r\n}\r\n\r\n/** Gets whether an element has a valid tabindex. */\r\nfunction hasValidTabIndex(element: HTMLElement): boolean {\r\n  if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\r\n    return false;\r\n  }\r\n\r\n  let tabIndex = element.getAttribute('tabindex');\r\n\r\n  // IE11 parses tabindex=\"\" as the value \"-32768\"\r\n  if (tabIndex == '-32768') {\r\n    return false;\r\n  }\r\n\r\n  return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\r\n}\r\n\r\n/**\r\n * Returns the parsed tabindex from the element attributes instead of returning the\r\n * evaluated tabindex from the browsers defaults.\r\n */\r\nfunction getTabIndexValue(element: HTMLElement): number | null {\r\n  if (!hasValidTabIndex(element)) {\r\n    return null;\r\n  }\r\n\r\n  // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\r\n  const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\r\n\r\n  return isNaN(tabIndex) ? -1 : tabIndex;\r\n}\r\n\r\n/** Checks whether the specified element is potentially tabbable on iOS */\r\nfunction isPotentiallyTabbableIOS(element: HTMLElement): boolean {\r\n  let nodeName = element.nodeName.toLowerCase();\r\n  let inputType = nodeName === 'input' && (element as HTMLInputElement).type;\r\n\r\n  return inputType === 'text'\r\n    || inputType === 'password'\r\n    || nodeName === 'select'\r\n    || nodeName === 'textarea';\r\n}\r\n\r\n/**\r\n * Gets whether an element is potentially focusable without taking current visible/disabled state\r\n * into account.\r\n */\r\nfunction isPotentiallyFocusable(element: HTMLElement): boolean {\r\n  // Inputs are potentially focusable *unless* they're type=\"hidden\".\r\n  if (isHiddenInput(element)) {\r\n    return false;\r\n  }\r\n\r\n  return isNativeFormElement(element) ||\r\n    isAnchorWithHref(element) ||\r\n    element.hasAttribute('contenteditable') ||\r\n    hasValidTabIndex(element);\r\n}\r\n\r\n/** Gets the parent window of a DOM node with regards of being inside of an iframe. */\r\nfunction getWindow(node: HTMLElement): Window {\r\n  // ownerDocument is null if `node` itself *is* a document.\r\n  return node.ownerDocument && node.ownerDocument.defaultView || window;\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/* eslint-disable */\r\n\r\n/**\r\n * Type describing the allowed values for a boolean input.\r\n * @docs-private\r\n */\r\nexport type BooleanInput = string | boolean | null | undefined;\r\n\r\n/** Coerces a data-bound value (typically a string) to a boolean. */\r\nexport function coerceBooleanProperty(value: any): boolean {\r\n  return value != null && `${value}` !== 'false';\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/* eslint-disable */\r\n\r\nimport { coerceBooleanProperty, BooleanInput } from './boolean-property';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport {\r\n  AfterContentInit,\r\n  Directive,\r\n  ElementRef,\r\n  Inject,\r\n  Injectable,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  DoCheck,\r\n  SimpleChanges,\r\n  OnChanges\r\n} from '@angular/core';\r\nimport { take } from 'rxjs/operators';\r\nimport { InteractivityChecker } from './interactivity-checker';\r\n\r\n\r\n/**\r\n * Class that allows for trapping focus within a DOM element.\r\n *\r\n * This class currently uses a relatively simple approach to focus trapping.\r\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\r\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause the two to misalign.\r\n *\r\n * @deprecated Use `ConfigurableFocusTrap` instead.\r\n * @breaking-change for 11.0.0 Remove this class.\r\n */\r\nexport class FocusTrap {\r\n  private _startAnchor?: HTMLElement | null;\r\n  private _endAnchor?: HTMLElement | null;\r\n  private _hasAttached = false;\r\n\r\n  // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\r\n  protected startAnchorListener = () => this.focusLastTabbableElement();\r\n  protected endAnchorListener = () => this.focusFirstTabbableElement();\r\n\r\n  /** Whether the focus trap is active. */\r\n  get enabled(): boolean {\r\n    return this._enabled;\r\n  }\r\n\r\n  set enabled(value: boolean) {\r\n    this._enabled = value;\r\n\r\n    if (this._startAnchor && this._endAnchor) {\r\n      this._toggleAnchorTabIndex(value, this._startAnchor);\r\n      this._toggleAnchorTabIndex(value, this._endAnchor);\r\n    }\r\n  }\r\n\r\n  protected _enabled: boolean = true;\r\n\r\n  constructor(\r\n    readonly _element: HTMLElement,\r\n    private _checker: InteractivityChecker,\r\n    readonly _ngZone: NgZone,\r\n    readonly _document: Document,\r\n    deferAnchors = false) {\r\n\r\n    if (!deferAnchors) {\r\n      this.attachAnchors();\r\n    }\r\n  }\r\n\r\n  /** Destroys the focus trap by cleaning up the anchors. */\r\n  destroy() {\r\n    const startAnchor = this._startAnchor;\r\n    const endAnchor = this._endAnchor;\r\n\r\n    if (startAnchor) {\r\n      startAnchor.removeEventListener('focus', this.startAnchorListener);\r\n\r\n      if (startAnchor.parentNode) {\r\n        startAnchor.parentNode.removeChild(startAnchor);\r\n      }\r\n    }\r\n\r\n    if (endAnchor) {\r\n      endAnchor.removeEventListener('focus', this.endAnchorListener);\r\n\r\n      if (endAnchor.parentNode) {\r\n        endAnchor.parentNode.removeChild(endAnchor);\r\n      }\r\n    }\r\n\r\n    this._startAnchor = this._endAnchor = null;\r\n    this._hasAttached = false;\r\n  }\r\n\r\n  /**\r\n   * Inserts the anchors into the DOM. This is usually done automatically\r\n   * in the constructor, but can be deferred for cases like directives with `*ngIf`.\r\n   * @returns Whether the focus trap managed to attach successfuly. This may not be the case\r\n   * if the target element isn't currently in the DOM.\r\n   */\r\n  attachAnchors(): boolean {\r\n    // If we're not on the browser, there can be no focus to trap.\r\n    if (this._hasAttached) {\r\n      return true;\r\n    }\r\n\r\n    this._ngZone.runOutsideAngular(() => {\r\n      if (!this._startAnchor) {\r\n        this._startAnchor = this._createAnchor();\r\n        this._startAnchor!.addEventListener('focus', this.startAnchorListener);\r\n      }\r\n\r\n      if (!this._endAnchor) {\r\n        this._endAnchor = this._createAnchor();\r\n        this._endAnchor!.addEventListener('focus', this.endAnchorListener);\r\n      }\r\n    });\r\n\r\n    if (this._element.parentNode) {\r\n      this._element.parentNode.insertBefore(this._startAnchor!, this._element);\r\n      this._element.parentNode.insertBefore(this._endAnchor!, this._element.nextSibling);\r\n      this._hasAttached = true;\r\n    }\r\n\r\n    return this._hasAttached;\r\n  }\r\n\r\n  /**\r\n   * Waits for the zone to stabilize, then either focuses the first element that the\r\n   * user specified, or the first tabbable element.\r\n   * @returns Returns a promise that resolves with a boolean, depending\r\n   * on whether focus was moved successfully.\r\n   */\r\n  focusInitialElementWhenReady(): Promise<boolean> {\r\n    return new Promise<boolean>(resolve => {\r\n      this._executeOnStable(() => resolve(this.focusInitialElement()));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Waits for the zone to stabilize, then focuses\r\n   * the first tabbable element within the focus trap region.\r\n   * @returns Returns a promise that resolves with a boolean, depending\r\n   * on whether focus was moved successfully.\r\n   */\r\n  focusFirstTabbableElementWhenReady(): Promise<boolean> {\r\n    return new Promise<boolean>(resolve => {\r\n      this._executeOnStable(() => resolve(this.focusFirstTabbableElement()));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Waits for the zone to stabilize, then focuses\r\n   * the last tabbable element within the focus trap region.\r\n   * @returns Returns a promise that resolves with a boolean, depending\r\n   * on whether focus was moved successfully.\r\n   */\r\n  focusLastTabbableElementWhenReady(): Promise<boolean> {\r\n    return new Promise<boolean>(resolve => {\r\n      this._executeOnStable(() => resolve(this.focusLastTabbableElement()));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the specified boundary element of the trapped region.\r\n   * @param bound The boundary to get (start or end of trapped region).\r\n   * @returns The boundary element.\r\n   */\r\n  private _getRegionBoundary(bound: 'start' | 'end'): HTMLElement | null {\r\n    // Contains the deprecated version of selector, for temporary backwards comparability.\r\n    let markers = this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` +\r\n      `[cdkFocusRegion${bound}], ` +\r\n      `[cdk-focus-${bound}]`) as NodeListOf<HTMLElement>;\r\n\r\n    for (let i = 0; i < markers.length; i++) {\r\n      // @breaking-change 8.0.0\r\n      if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\r\n        console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\r\n          `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\r\n          `attribute will be removed in 8.0.0.`, markers[i]);\r\n      } else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\r\n        console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\r\n          `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\r\n          `will be removed in 8.0.0.`, markers[i]);\r\n      }\r\n    }\r\n\r\n    if (bound == 'start') {\r\n      return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\r\n    }\r\n    return markers.length ?\r\n      markers[markers.length - 1] : this._getLastTabbableElement(this._element);\r\n  }\r\n\r\n  /**\r\n   * Focuses the element that should be focused when the focus trap is initialized.\r\n   * @returns Whether focus was moved successfully.\r\n   */\r\n  focusInitialElement(): boolean {\r\n    // Contains the deprecated version of selector, for temporary backwards comparability.\r\n    const redirectToElement = this._element.querySelector(`[cdk-focus-initial], ` +\r\n      `[cdkFocusInitial]`) as HTMLElement;\r\n\r\n    if (redirectToElement) {\r\n      // @breaking-change 8.0.0\r\n      if (redirectToElement.hasAttribute(`cdk-focus-initial`)) {\r\n        console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\r\n          `use 'cdkFocusInitial' instead. The deprecated attribute ` +\r\n          `will be removed in 8.0.0`, redirectToElement);\r\n      }\r\n\r\n      // Warn the consumer if the element they've pointed to\r\n      // isn't focusable, when not in production mode.\r\n\r\n      if (!this._checker.isFocusable(redirectToElement)) {\r\n        const focusableChild = this._getFirstTabbableElement(redirectToElement) as HTMLElement;\r\n        focusableChild?.focus();\r\n        return !!focusableChild;\r\n      }\r\n\r\n      redirectToElement.focus();\r\n      return true;\r\n    }\r\n\r\n    return this.focusFirstTabbableElement();\r\n  }\r\n\r\n  /**\r\n   * Focuses the first tabbable element within the focus trap region.\r\n   * @returns Whether focus was moved successfully.\r\n   */\r\n  focusFirstTabbableElement(): boolean {\r\n    const redirectToElement = this._getRegionBoundary('start');\r\n\r\n    if (redirectToElement) {\r\n      redirectToElement.focus();\r\n    }\r\n\r\n    return !!redirectToElement;\r\n  }\r\n\r\n  /**\r\n   * Focuses the last tabbable element within the focus trap region.\r\n   * @returns Whether focus was moved successfully.\r\n   */\r\n  focusLastTabbableElement(): boolean {\r\n    const redirectToElement = this._getRegionBoundary('end');\r\n\r\n    if (redirectToElement) {\r\n      redirectToElement.focus();\r\n    }\r\n\r\n    return !!redirectToElement;\r\n  }\r\n\r\n  /**\r\n   * Checks whether the focus trap has successfully been attached.\r\n   */\r\n  hasAttached(): boolean {\r\n    return this._hasAttached;\r\n  }\r\n\r\n  /** Get the first tabbable element from a DOM subtree (inclusive). */\r\n  private _getFirstTabbableElement(root: HTMLElement): HTMLElement | null {\r\n    if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\r\n      return root;\r\n    }\r\n\r\n    // Iterate in DOM order. Note that IE doesn't have `children` for SVG so we fall\r\n    // back to `childNodes` which includes text nodes, comments etc.\r\n    let children = root.children || root.childNodes;\r\n\r\n    for (let i = 0; i < children.length; i++) {\r\n      let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\r\n        this._getFirstTabbableElement(children[i] as HTMLElement) :\r\n        null;\r\n\r\n      if (tabbableChild) {\r\n        return tabbableChild;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /** Get the last tabbable element from a DOM subtree (inclusive). */\r\n  private _getLastTabbableElement(root: HTMLElement): HTMLElement | null {\r\n    if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\r\n      return root;\r\n    }\r\n\r\n    // Iterate in reverse DOM order.\r\n    let children = root.children || root.childNodes;\r\n\r\n    for (let i = children.length - 1; i >= 0; i--) {\r\n      let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\r\n        this._getLastTabbableElement(children[i] as HTMLElement) :\r\n        null;\r\n\r\n      if (tabbableChild) {\r\n        return tabbableChild;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /** Creates an anchor element. */\r\n  private _createAnchor(): HTMLElement {\r\n    const anchor = this._document.createElement('div');\r\n    this._toggleAnchorTabIndex(this._enabled, anchor);\r\n    anchor.classList.add('cdk-visually-hidden');\r\n    anchor.classList.add('cdk-focus-trap-anchor');\r\n    anchor.setAttribute('aria-hidden', 'true');\r\n    return anchor;\r\n  }\r\n\r\n  /**\r\n   * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\r\n   * @param isEnabled Whether the focus trap is enabled.\r\n   * @param anchor Anchor on which to toggle the tabindex.\r\n   */\r\n  private _toggleAnchorTabIndex(isEnabled: boolean, anchor: HTMLElement) {\r\n    // Remove the tabindex completely, rather than setting it to -1, because if the\r\n    // element has a tabindex, the user might still hit it when navigating with the arrow keys.\r\n    isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\r\n  }\r\n\r\n  /**\r\n   * Toggles the`tabindex` of both anchors to either trap Tab focus or allow it to escape.\r\n   * @param enabled: Whether the anchors should trap Tab.\r\n   */\r\n  protected toggleAnchors(enabled: boolean) {\r\n    if (this._startAnchor && this._endAnchor) {\r\n      this._toggleAnchorTabIndex(enabled, this._startAnchor);\r\n      this._toggleAnchorTabIndex(enabled, this._endAnchor);\r\n    }\r\n  }\r\n\r\n  /** Executes a function when the zone is stable. */\r\n  private _executeOnStable(fn: () => any): void {\r\n    if (this._ngZone.isStable) {\r\n      fn();\r\n    } else {\r\n      this._ngZone.onStable.pipe(take(1)).subscribe(fn);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Factory that allows easy instantiation of focus traps.\r\n * @deprecated Use `ConfigurableFocusTrapFactory` instead.\r\n * @breaking-change for 11.0.0 Remove this class.\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class FocusTrapFactory {\r\n  private _document: Document;\r\n\r\n  constructor(\r\n    private _checker: InteractivityChecker,\r\n    private _ngZone: NgZone,\r\n    @Inject(DOCUMENT) _document: any) {\r\n\r\n    this._document = _document;\r\n  }\r\n\r\n  /**\r\n   * Creates a focus-trapped region around the given element.\r\n   * @param element The element around which focus will be trapped.\r\n   * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\r\n   *     manually by the user.\r\n   * @returns The created focus trap instance.\r\n   */\r\n  create(element: HTMLElement, deferCaptureElements: boolean = false): FocusTrap {\r\n    return new FocusTrap(\r\n      element, this._checker, this._ngZone, this._document, deferCaptureElements);\r\n  }\r\n}\r\n\r\n/** Directive for trapping focus within a region. */\r\n@Directive({\r\n  selector: '[focusTrap]',\r\n  exportAs: 'focusTrap'\r\n})\r\nexport class FocusTrapDirective implements OnDestroy, AfterContentInit, OnChanges, DoCheck {\r\n  private _document: Document;\r\n\r\n  /** Underlying FocusTrap instance. */\r\n  focusTrap: FocusTrap;\r\n\r\n  /** Previously focused element to restore focus to upon destroy when using autoCapture. */\r\n  private _previouslyFocusedElement: HTMLElement | null = null;\r\n\r\n  /** Whether the focus trap is active. */\r\n  @Input('cdkTrapFocus')\r\n  get enabled(): boolean {\r\n    return this.focusTrap.enabled;\r\n  }\r\n\r\n  set enabled(value: boolean) {\r\n    this.focusTrap.enabled = coerceBooleanProperty(value);\r\n  }\r\n\r\n  /**\r\n   * Whether the directive should automatically move focus into the trapped region upon\r\n   * initialization and return focus to the previous activeElement upon destruction.\r\n   */\r\n  @Input('cdkTrapFocusAutoCapture')\r\n  get autoCapture(): boolean {\r\n    return this._autoCapture;\r\n  }\r\n\r\n  set autoCapture(value: boolean) {\r\n    this._autoCapture = coerceBooleanProperty(value);\r\n  }\r\n\r\n  private _autoCapture = false;\r\n\r\n  constructor(\r\n    private _elementRef: ElementRef<HTMLElement>,\r\n    private _focusTrapFactory: FocusTrapFactory,\r\n    @Inject(DOCUMENT) _document: any) {\r\n\r\n    this._document = _document;\r\n    this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.focusTrap.destroy();\r\n\r\n    // If we stored a previously focused element when using autoCapture, return focus to that\r\n    // element now that the trapped region is being destroyed.\r\n    if (this._previouslyFocusedElement) {\r\n      this._previouslyFocusedElement.focus();\r\n      this._previouslyFocusedElement = null;\r\n    }\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.focusTrap.attachAnchors();\r\n\r\n    if (this.autoCapture) {\r\n      this._captureFocus();\r\n    }\r\n  }\r\n\r\n  ngDoCheck() {\r\n    if (!this.focusTrap.hasAttached()) {\r\n      this.focusTrap.attachAnchors();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const autoCaptureChange = changes['autoCapture'];\r\n\r\n    if (autoCaptureChange && !autoCaptureChange.firstChange && this.autoCapture &&\r\n      this.focusTrap.hasAttached()) {\r\n      this._captureFocus();\r\n    }\r\n  }\r\n\r\n  private _captureFocus() {\r\n    this._previouslyFocusedElement = this._document.activeElement as HTMLElement;\r\n    this.focusTrap.focusInitialElementWhenReady();\r\n  }\r\n\r\n  static ngAcceptInputType_enabled: BooleanInput;\r\n  static ngAcceptInputType_autoCapture: BooleanInput;\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FocusTrapManager } from './focus-trap-manager';\r\nimport { InteractivityChecker } from './interactivity-checker';\r\nimport { FocusTrapDirective } from './focus-trap';\r\nimport { Platform } from './platform';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [FocusTrapDirective],\r\n  exports: [FocusTrapDirective]\r\n})\r\nexport class FocusTrapModule {\r\n  static forRoot(): ModuleWithProviders<FocusTrapModule> {\r\n    return {\r\n      ngModule: FocusTrapModule,\r\n      providers: [\r\n        FocusTrapManager,\r\n        Platform,\r\n        InteractivityChecker\r\n      ]\r\n    };\r\n  }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}