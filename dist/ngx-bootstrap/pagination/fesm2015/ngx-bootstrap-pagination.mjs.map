{"version":3,"file":"ngx-bootstrap-pagination.mjs","sources":["../../../../src/pagination/pagination.config.ts","../../../../src/pagination/pager.component.ts","../../../../src/pagination/pager.component.html","../../../../src/pagination/pagination.component.html","../../../../src/pagination/pagination.component.ts","../../../../src/pagination/pagination.module.ts","../../../../src/pagination/ngx-bootstrap-pagination.ts"],"sourcesContent":["// todo: split\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { ConfigModel, PagerModel } from './models';\r\n\r\n/** Provides default values for Pagination and pager components */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PaginationConfig {\r\n  main: Partial<ConfigModel> = {\r\n    itemsPerPage: 10,\r\n    boundaryLinks: false,\r\n    directionLinks: true,\r\n    firstText: 'First',\r\n    previousText: 'Previous',\r\n    nextText: 'Next',\r\n    lastText: 'Last',\r\n    pageBtnClass: '',\r\n    rotate: true\r\n  };\r\n  pager: PagerModel = {\r\n    itemsPerPage: 15,\r\n    previousText: '« Previous',\r\n    nextText: 'Next »',\r\n    pageBtnClass: '',\r\n    align: true\r\n  };\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  Provider\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { ConfigModel, PagesModel } from './models';\r\n\r\nimport { PageChangedEvent } from './pagination.component';\r\nimport { PaginationConfig } from './pagination.config';\r\n\r\nexport const PAGER_CONTROL_VALUE_ACCESSOR: Provider = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => PagerComponent),\r\n  multi: true\r\n};\r\n\r\n@Component({\r\n  selector: 'pager',\r\n  templateUrl: './pager.component.html',\r\n  providers: [PAGER_CONTROL_VALUE_ACCESSOR]\r\n})\r\nexport class PagerComponent implements ControlValueAccessor, OnInit {\r\n  config?: Partial<ConfigModel>;\r\n  /** if `true` aligns each link to the sides of pager */\r\n  @Input() align = false;\r\n  /** limit number for page links in pager */\r\n  @Input() maxSize?: number;\r\n  /** if false first and last buttons will be hidden */\r\n  @Input() boundaryLinks = false;\r\n  /** if false previous and next buttons will be hidden */\r\n  @Input() directionLinks = true;\r\n  // labels\r\n  /** first button text */\r\n  @Input() firstText = 'First';\r\n  /** previous button text */\r\n  @Input() previousText = '« Previous';\r\n  /** next button text */\r\n  @Input() nextText = 'Next »';\r\n  /** last button text */\r\n  @Input() lastText = 'Last';\r\n  /** if true current page will in the middle of pages list */\r\n  @Input() rotate = true;\r\n  // css\r\n  /** add class to <code><li\\></code> */\r\n  @Input() pageBtnClass = '';\r\n\r\n  /** if true pagination component will be disabled */\r\n  @Input() disabled = false;\r\n\r\n  /** fired when total pages count changes, $event:number equals to total pages count */\r\n  @Output() numPages = new EventEmitter<number>();\r\n  /** fired when page was changed, $event:{page, itemsPerPage} equals to\r\n   * object with current page index and number of items per page\r\n   */\r\n  @Output()\r\n  pageChanged = new EventEmitter<PageChangedEvent>();\r\n  onChange = Function.prototype;\r\n  onTouched = Function.prototype;\r\n  classMap = '';\r\n  pages?: PagesModel[];\r\n  protected inited = false;\r\n\r\n  constructor(private elementRef: ElementRef,\r\n              paginationConfig: PaginationConfig,\r\n              private changeDetection: ChangeDetectorRef) {\r\n    this.elementRef = elementRef;\r\n    if (!this.config) {\r\n      this.configureOptions(\r\n        Object.assign({}, paginationConfig.main, paginationConfig.pager)\r\n      );\r\n    }\r\n  }\r\n\r\n  protected _itemsPerPage = 15;\r\n\r\n  /** maximum number of items per page. If value less than 1 will display all items on one page */\r\n  @Input()\r\n  get itemsPerPage(): number {\r\n    return this._itemsPerPage;\r\n  }\r\n\r\n  set itemsPerPage(v: number) {\r\n    this._itemsPerPage = v;\r\n    this.totalPages = this.calculateTotalPages();\r\n  }\r\n\r\n  protected _totalItems = 0;\r\n\r\n  /** total number of items in all pages */\r\n  @Input()\r\n  get totalItems(): number {\r\n    return this._totalItems;\r\n  }\r\n\r\n  set totalItems(v: number) {\r\n    this._totalItems = v;\r\n    this.totalPages = this.calculateTotalPages();\r\n  }\r\n\r\n  protected _totalPages = 0;\r\n\r\n  get totalPages(): number {\r\n    return this._totalPages;\r\n  }\r\n\r\n  set totalPages(v: number) {\r\n    this._totalPages = v;\r\n    this.numPages.emit(v);\r\n    if (this.inited) {\r\n      this.selectPage(this.page);\r\n    }\r\n  }\r\n\r\n  protected _page = 1;\r\n\r\n  get page(): number {\r\n    return this._page;\r\n  }\r\n\r\n  set page(value: number) {\r\n    const _previous = this._page;\r\n    this._page = value > this.totalPages ? this.totalPages : value || 1;\r\n    this.changeDetection.markForCheck();\r\n\r\n    if (_previous === this._page || typeof _previous === 'undefined') {\r\n      return;\r\n    }\r\n\r\n    this.pageChanged.emit({\r\n      page: this._page,\r\n      itemsPerPage: this.itemsPerPage\r\n    });\r\n  }\r\n\r\n  configureOptions(config: Partial<ConfigModel>): void {\r\n    this.config = Object.assign({}, config);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (typeof window !== 'undefined') {\r\n      this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\r\n    }\r\n    // watch for maxSize\r\n    if (typeof this.maxSize === 'undefined') {\r\n      this.maxSize = this.config?.maxSize || 0;\r\n    }\r\n\r\n    if (typeof this.rotate === 'undefined') {\r\n      this.rotate = !!this.config?.rotate;\r\n    }\r\n\r\n    if (typeof this.boundaryLinks === 'undefined') {\r\n      this.boundaryLinks = !!this.config?.boundaryLinks;\r\n    }\r\n\r\n\r\n    if (typeof this.directionLinks === 'undefined') {\r\n      this.directionLinks = !!this.config?.directionLinks;\r\n    }\r\n\r\n    if (typeof this.pageBtnClass === 'undefined') {\r\n      this.pageBtnClass = this.config?.pageBtnClass || '';\r\n    }\r\n\r\n    // base class\r\n    if (typeof this.itemsPerPage === 'undefined') {\r\n      this.itemsPerPage = this.config?.itemsPerPage || 0;\r\n    }\r\n\r\n    this.totalPages = this.calculateTotalPages();\r\n    // this class\r\n    this.pages = this.getPages(this.page, this.totalPages);\r\n    this.inited = true;\r\n  }\r\n\r\n  writeValue(value: number): void {\r\n    this.page = value;\r\n    this.pages = this.getPages(this.page, this.totalPages);\r\n  }\r\n\r\n  getText(key: string): string {\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return (this as any)[`${key}Text`] || (this as any).config[`${key}Text`];\r\n  }\r\n\r\n  noPrevious(): boolean {\r\n    return this.page === 1;\r\n  }\r\n\r\n  noNext(): boolean {\r\n    return this.page === this.totalPages;\r\n  }\r\n\r\n  registerOnChange(fn: () => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  selectPage(page: number, event?: Event): void {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    if (!this.disabled) {\r\n      if (event && event.target) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        const target: any = event.target;\r\n        target.blur();\r\n      }\r\n      this.writeValue(page);\r\n      this.onChange(this.page);\r\n    }\r\n  }\r\n\r\n  // Create page object used in template\r\n  protected makePage(num: number,\r\n                     text: string,\r\n                     active: boolean): { number: number; text: string; active: boolean } {\r\n    return { text, number: num, active };\r\n  }\r\n\r\n  protected getPages(currentPage: number, totalPages: number): PagesModel[] {\r\n    const pages: PagesModel[] = [];\r\n\r\n    // Default page limits\r\n    let startPage = 1;\r\n    let endPage = totalPages;\r\n    const isMaxSized =\r\n      typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\r\n\r\n    // recompute if maxSize\r\n    if (isMaxSized && this.maxSize) {\r\n      if (this.rotate) {\r\n        // Current page is displayed in the middle of the visible ones\r\n        startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\r\n        endPage = startPage + this.maxSize - 1;\r\n\r\n        // Adjust if limit is exceeded\r\n        if (endPage > totalPages) {\r\n          endPage = totalPages;\r\n          startPage = endPage - this.maxSize + 1;\r\n        }\r\n      } else {\r\n        // Visible pages are paginated with maxSize\r\n        startPage =\r\n          (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\r\n\r\n        // Adjust last page if limit is exceeded\r\n        endPage = Math.min(startPage + this.maxSize - 1, totalPages);\r\n      }\r\n    }\r\n\r\n    // Add page number links\r\n    for (let num = startPage; num <= endPage; num++) {\r\n      const page = this.makePage(num, num.toString(), num === currentPage);\r\n      pages.push(page);\r\n    }\r\n\r\n    // Add links to move between page sets\r\n    if (isMaxSized && !this.rotate) {\r\n      if (startPage > 1) {\r\n        const previousPageSet = this.makePage(startPage - 1, '...', false);\r\n        pages.unshift(previousPageSet);\r\n      }\r\n\r\n      if (endPage < totalPages) {\r\n        const nextPageSet = this.makePage(endPage + 1, '...', false);\r\n        pages.push(nextPageSet);\r\n      }\r\n    }\r\n\r\n    return pages;\r\n  }\r\n\r\n  // base class\r\n  protected calculateTotalPages(): number {\r\n    const totalPages =\r\n      this.itemsPerPage < 1\r\n        ? 1\r\n        : Math.ceil(this.totalItems / this.itemsPerPage);\r\n\r\n    return Math.max(totalPages || 0, 1);\r\n  }\r\n}\r\n","<ul class=\"pager\">\r\n  <li [class.disabled]=\"noPrevious()\" [class.previous]=\"align\"\r\n      [ngClass]=\"{'pull-left': align, 'float-left': align}\"\r\n      class=\"{{ pageBtnClass }}\">\r\n    <a href (click)=\"selectPage(page - 1, $event)\">{{ getText('previous') }}</a>\r\n  </li>\r\n  <li [class.disabled]=\"noNext()\" [class.next]=\"align\"\r\n      [ngClass]=\"{'pull-right': align, 'float-right': align}\"\r\n      class=\"{{ pageBtnClass }}\">\r\n    <a href (click)=\"selectPage(page + 1, $event)\">{{ getText('next') }}</a>\r\n  </li>\r\n</ul>\r\n","<ul class=\"pagination\" [ngClass]=\"classMap\">\r\n  <li class=\"pagination-first page-item\"\r\n      *ngIf=\"boundaryLinks\"\r\n      [class.disabled]=\"noPrevious() || disabled\">\r\n    <a class=\"page-link\" href (click)=\"selectPage(1, $event)\">\r\n      <ng-container [ngTemplateOutlet]=\"customFirstTemplate || defaultFirstTemplate\"\r\n                   [ngTemplateOutletContext]=\"{disabled: noPrevious() || disabled, currentPage: page}\">\r\n      </ng-container>\r\n    </a>\r\n  </li>\r\n\r\n  <li class=\"pagination-prev page-item\"\r\n      *ngIf=\"directionLinks\"\r\n      [class.disabled]=\"noPrevious() || disabled\">\r\n    <a class=\"page-link\" href (click)=\"selectPage(page - 1, $event)\">\r\n      <ng-container [ngTemplateOutlet]=\"customPreviousTemplate || defaultPreviousTemplate\"\r\n                   [ngTemplateOutletContext]=\"{disabled: noPrevious() || disabled, currentPage: page}\">\r\n      </ng-container>\r\n    </a>\r\n  </li>\r\n\r\n  <li *ngFor=\"let pg of pages\"\r\n      [class.active]=\"pg.active\"\r\n      [class.disabled]=\"disabled && !pg.active\"\r\n      class=\"pagination-page page-item\">\r\n    <a class=\"page-link\" href (click)=\"selectPage(pg.number, $event)\">\r\n      <ng-container [ngTemplateOutlet]=\"customPageTemplate || defaultPageTemplate\"\r\n                   [ngTemplateOutletContext]=\"{disabled: disabled, $implicit: pg, currentPage: page}\">\r\n      </ng-container>\r\n    </a>\r\n  </li>\r\n\r\n  <li class=\"pagination-next page-item\"\r\n      *ngIf=\"directionLinks\"\r\n      [class.disabled]=\"noNext() || disabled\">\r\n    <a class=\"page-link\" href (click)=\"selectPage(page + 1, $event)\">\r\n      <ng-container [ngTemplateOutlet]=\"customNextTemplate || defaultNextTemplate\"\r\n                   [ngTemplateOutletContext]=\"{disabled: noNext() || disabled, currentPage: page}\">\r\n      </ng-container>\r\n    </a>\r\n  </li>\r\n\r\n  <li class=\"pagination-last page-item\"\r\n      *ngIf=\"boundaryLinks\"\r\n      [class.disabled]=\"noNext() || disabled\">\r\n    <a class=\"page-link\" href (click)=\"selectPage(totalPages, $event)\">\r\n      <ng-container [ngTemplateOutlet]=\"customLastTemplate || defaultLastTemplate\"\r\n                   [ngTemplateOutletContext]=\"{disabled: noNext() || disabled, currentPage: page}\">\r\n      </ng-container>\r\n    </a>\r\n  </li>\r\n</ul>\r\n\r\n<ng-template #defaultPageTemplate let-page>{{ page.text }}</ng-template>\r\n\r\n<ng-template #defaultNextTemplate>{{ getText('next') }}</ng-template>\r\n\r\n<ng-template #defaultPreviousTemplate>{{ getText('previous') }}</ng-template>\r\n\r\n<ng-template #defaultFirstTemplate>{{ getText('first') }}</ng-template>\r\n\r\n<ng-template #defaultLastTemplate>{{ getText('last') }}</ng-template>\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  Provider,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { ConfigModel, PagesModel, PaginationLinkContext, PaginationNumberLinkContext } from './models';\r\n\r\nimport { PaginationConfig } from './pagination.config';\r\n\r\nexport interface PageChangedEvent {\r\n  itemsPerPage: number;\r\n  page: number;\r\n}\r\n\r\nexport const PAGINATION_CONTROL_VALUE_ACCESSOR: Provider = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => PaginationComponent),\r\n  multi: true\r\n};\r\n\r\n@Component({\r\n  selector: 'pagination',\r\n  templateUrl: './pagination.component.html',\r\n  providers: [PAGINATION_CONTROL_VALUE_ACCESSOR]\r\n})\r\nexport class PaginationComponent implements ControlValueAccessor, OnInit {\r\n  config?: Partial<ConfigModel>;\r\n  /** if `true` aligns each link to the sides of pager */\r\n  @Input() align = true;\r\n  /** limit number for page links in pager */\r\n  @Input() maxSize?: number;\r\n  /** if false first and last buttons will be hidden */\r\n  @Input() boundaryLinks = false;\r\n  /** if false previous and next buttons will be hidden */\r\n  @Input() directionLinks = true;\r\n  // labels\r\n  /** first button text */\r\n  @Input() firstText?: string;\r\n  /** previous button text */\r\n  @Input() previousText?: string;\r\n  /** next button text */\r\n  @Input() nextText?: string;\r\n  /** last button text */\r\n  @Input() lastText?: string;\r\n  /** if true current page will in the middle of pages list */\r\n  @Input() rotate = true;\r\n  // css\r\n  /** add class to <code><li\\></code> */\r\n  @Input() pageBtnClass = '';\r\n  /** if true pagination component will be disabled */\r\n  @Input() disabled = false;\r\n  /** custom template for page link */\r\n  @Input() customPageTemplate?: TemplateRef<PaginationNumberLinkContext>;\r\n  /** custom template for next link */\r\n  @Input() customNextTemplate?: TemplateRef<PaginationLinkContext>;\r\n  /** custom template for previous link */\r\n  @Input() customPreviousTemplate?: TemplateRef<PaginationLinkContext>;\r\n  /** custom template for first link */\r\n  @Input() customFirstTemplate?: TemplateRef<PaginationLinkContext>;\r\n  /** custom template for last link */\r\n  @Input() customLastTemplate?: TemplateRef<PaginationLinkContext>;\r\n\r\n  /** fired when total pages count changes, $event:number equals to total pages count */\r\n  @Output() numPages = new EventEmitter<number>();\r\n  /** fired when page was changed, $event:{page, itemsPerPage} equals to object\r\n   * with current page index and number of items per page\r\n   */\r\n  @Output() pageChanged = new EventEmitter<PageChangedEvent>();\r\n  onChange = Function.prototype;\r\n  onTouched = Function.prototype;\r\n  classMap = '';\r\n  pages?: PagesModel[];\r\n  protected inited = false;\r\n\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n    paginationConfig: PaginationConfig,\r\n    private changeDetection: ChangeDetectorRef\r\n  ) {\r\n    this.elementRef = elementRef;\r\n    if (!this.config) {\r\n      this.configureOptions(paginationConfig.main);\r\n    }\r\n  }\r\n\r\n  protected _itemsPerPage = 10;\r\n\r\n  /** maximum number of items per page. If value less than 1 will display all items on one page */\r\n  @Input()\r\n  get itemsPerPage(): number {\r\n    return this._itemsPerPage;\r\n  }\r\n\r\n  set itemsPerPage(v: number) {\r\n    this._itemsPerPage = v;\r\n    this.totalPages = this.calculateTotalPages();\r\n  }\r\n\r\n  protected _totalItems = 0;\r\n\r\n  /** total number of items in all pages */\r\n  @Input()\r\n  get totalItems(): number {\r\n    return this._totalItems;\r\n  }\r\n\r\n  set totalItems(v: number) {\r\n    this._totalItems = v;\r\n    this.totalPages = this.calculateTotalPages();\r\n  }\r\n\r\n  protected _totalPages = 0;\r\n\r\n  get totalPages(): number {\r\n    return this._totalPages;\r\n  }\r\n\r\n  set totalPages(v: number) {\r\n    this._totalPages = v;\r\n    this.numPages.emit(v);\r\n    if (this.inited) {\r\n      this.selectPage(this.page);\r\n    }\r\n  }\r\n\r\n  protected _page = 1;\r\n\r\n  get page(): number {\r\n    return this._page;\r\n  }\r\n\r\n  set page(value: number) {\r\n    const _previous = this._page;\r\n    this._page = value > this.totalPages ? this.totalPages : value || 1;\r\n    this.changeDetection.markForCheck();\r\n\r\n    if (_previous === this._page || typeof _previous === 'undefined') {\r\n      return;\r\n    }\r\n\r\n    this.pageChanged.emit({\r\n      page: this._page,\r\n      itemsPerPage: this.itemsPerPage\r\n    });\r\n  }\r\n\r\n  configureOptions(config: Partial<ConfigModel>): void {\r\n    this.config = Object.assign({}, config);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (typeof window !== 'undefined') {\r\n      this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\r\n    }\r\n\r\n    // watch for maxSize\r\n    if (typeof this.maxSize === 'undefined') {\r\n      this.maxSize = this.config?.maxSize || 0;\r\n    }\r\n\r\n    if (typeof this.rotate === 'undefined') {\r\n      this.rotate = !!this.config?.rotate;\r\n    }\r\n\r\n    if (typeof this.boundaryLinks === 'undefined') {\r\n      this.boundaryLinks = !!this.config?.boundaryLinks;\r\n    }\r\n\r\n\r\n    if (typeof this.directionLinks === 'undefined') {\r\n      this.directionLinks = !!this.config?.directionLinks;\r\n    }\r\n\r\n    if (typeof this.pageBtnClass === 'undefined') {\r\n      this.pageBtnClass = this.config?.pageBtnClass || '';\r\n    }\r\n\r\n    // base class\r\n    if (typeof this.itemsPerPage === 'undefined') {\r\n      this.itemsPerPage = this.config?.itemsPerPage || 0;\r\n    }\r\n\r\n    this.totalPages = this.calculateTotalPages();\r\n    // this class\r\n    this.pages = this.getPages(this.page, this.totalPages);\r\n    this.inited = true;\r\n  }\r\n\r\n  writeValue(value: number): void {\r\n    this.page = value;\r\n    this.pages = this.getPages(this.page, this.totalPages);\r\n  }\r\n\r\n  getText(key: string): string {\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return (this as any)[`${key}Text`] || (this as any).config[`${key}Text`];\r\n  }\r\n\r\n  noPrevious(): boolean {\r\n    return this.page === 1;\r\n  }\r\n\r\n  noNext(): boolean {\r\n    return this.page === this.totalPages;\r\n  }\r\n\r\n  registerOnChange(fn: () => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  selectPage(page: number, event?: Event): void {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    if (!this.disabled) {\r\n      if (event && event.target) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        const target: any = event.target;\r\n        target.blur();\r\n      }\r\n      this.writeValue(page);\r\n      this.onChange(this.page);\r\n    }\r\n  }\r\n\r\n  // Create page object used in template\r\n  protected makePage(\r\n    num: number,\r\n    text: string,\r\n    active: boolean\r\n  ): { number: number; text: string; active: boolean } {\r\n    return { text, number: num, active };\r\n  }\r\n\r\n  protected getPages(currentPage: number, totalPages: number): PagesModel[] {\r\n    const pages: PagesModel[] = [];\r\n\r\n    // Default page limits\r\n    let startPage = 1;\r\n    let endPage = totalPages;\r\n    const isMaxSized =\r\n      typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\r\n\r\n    // recompute if maxSize\r\n    if (isMaxSized && this.maxSize) {\r\n      if (this.rotate) {\r\n        // Current page is displayed in the middle of the visible ones\r\n        startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\r\n        endPage = startPage + this.maxSize - 1;\r\n\r\n        // Adjust if limit is exceeded\r\n        if (endPage > totalPages) {\r\n          endPage = totalPages;\r\n          startPage = endPage - this.maxSize + 1;\r\n        }\r\n      } else {\r\n        // Visible pages are paginated with maxSize\r\n        startPage =\r\n          (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\r\n\r\n        // Adjust last page if limit is exceeded\r\n        endPage = Math.min(startPage + this.maxSize - 1, totalPages);\r\n      }\r\n    }\r\n\r\n    // Add page number links\r\n    for (let num = startPage; num <= endPage; num++) {\r\n      const page = this.makePage(num, num.toString(), num === currentPage);\r\n      pages.push(page);\r\n    }\r\n\r\n    // Add links to move between page sets\r\n    if (isMaxSized && !this.rotate) {\r\n      if (startPage > 1) {\r\n        const previousPageSet = this.makePage(startPage - 1, '...', false);\r\n        pages.unshift(previousPageSet);\r\n      }\r\n\r\n      if (endPage < totalPages) {\r\n        const nextPageSet = this.makePage(endPage + 1, '...', false);\r\n        pages.push(nextPageSet);\r\n      }\r\n    }\r\n\r\n    return pages;\r\n  }\r\n\r\n  // base class\r\n  protected calculateTotalPages(): number {\r\n    const totalPages =\r\n      this.itemsPerPage < 1\r\n        ? 1\r\n        : Math.ceil(this.totalItems / this.itemsPerPage);\r\n\r\n    return Math.max(totalPages || 0, 1);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { PagerComponent } from './pager.component';\r\nimport { PaginationComponent } from './pagination.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [PagerComponent, PaginationComponent],\r\n  exports: [PagerComponent, PaginationComponent]\r\n})\r\nexport class PaginationModule {\r\n  static forRoot(): ModuleWithProviders<PaginationModule> {\r\n    return { ngModule: PaginationModule, providers: [] };\r\n  }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}